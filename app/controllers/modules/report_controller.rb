class Modules::ReportController < ApplicationController
	before_action :logged_admin
	add_breadcrumb :index, "/modules/reports"
  add_breadcrumb :weekly, "/modules/reports/company", :only=>"company"
  add_breadcrumb :monthly, "/modules/reports/track", :only=>"track"
  add_breadcrumb :quarterly, "/modules/reports/quarter", :only=>"quarter"
  add_breadcrumb :consolidated, "/modules/reports/consolidated", :only=>"consolidated"
  add_breadcrumb :hunter, "/modules/reports/quarter_hunter", :only=>"quarter_hunter"
  # add_breadcrumb :countries, "/modules/reports/company", :only=>"company"
  # add_breadcrumb :countries, "/modules/reports/company", :only=>"company"
  # add_breadcrumb :countries, "/modules/reports/company", :only=>"company"

  layout "admins"
	#add_breadcrumb :dot_country, :modules_dots_country_dots_path

  def index
    @menu_scope="reports"
    @settings_scope="dot_reports"

  end

  def countries
    @menu_scope="reports"
    @settings_scope="dot_reports"

    @countries=CompaniesCountry.includes(:countries_dots=>[:dot],:country=>[:talent_hunters]).where(:company_id=>current_admin.company_id)
    if params[:id]
      @country=CompaniesCountry.includes(:countries_dots=>[:dot],:country=>[:talent_hunters]).where(:company_id=>current_admin.company_id, :id=>params[:id]).first
    else
      params[:id]=nil
      @country=@countries.first
    end
  end

  def company
    @menu_scope="reports"
    @settings_scope="dot_reports"

    @selected_country ||=  (params[:country_id] || current_admin.country_id)

    @dots=WorkTimeframe.new(params.permit![:date])
    

    @work_calendar=WorkCalendar.includes(:work_timeframes).where(" work_calendars.company_id=? and  work_calendars.year=? and work_calendars.country_id=?",current_admin.company_id,@current_year,@selected_country).first
    @current_timeframe=@work_calendar.work_timeframes.where("n_number=?",@current_week).first

    if !@dots.starts_at.nil?
      @selected_timeframe=@work_calendar.work_timeframes.where("n_number=?",@dots.starts_at.to_date.at_end_of_week.strftime("%U").to_i).first
    else
      @selected_timeframe=@current_timeframe
      @dots.starts_at=@current_timeframe.starts_at
    end

    #Category.find 1, :include => {:posts => [{:comments => :guest}, :tags]}

    #@countries=CompaniesCountry.includes(:countries_dots=>[:dot], :country=>[:talent_hunters=>[:talent_hunters_dots=>[:dots_scoreds=>:work_timeframe]]] ).where("companies_countries.company_id=? and work_timeframes.n_number=?",current_admin.company_id,@current_timeframe.n_number)
    # if current_admin.is_company_admin
    #   @countries=CompaniesCountry.includes(:countries_dots=>[:dot], :country=>[:talent_hunters=>[:talent_hunters_dots=>[:dots_scoreds=>:work_timeframe]]] ).where("companies_countries.company_id=?",current_admin.company_id)
    # elsif current_admin.is_country_admin
      @countries=CompaniesCountry.includes(:countries_dots=>[:dot], :country=>[:talent_hunters=>[:talent_hunters_dots=>[:dots_scoreds=>:work_timeframe]]] ).where("companies_countries.company_id=? and companies_countries.country_id=?",current_admin.company_id,@selected_country)
    # end
    #render :inline=>"#{@selected_timeframe.starts_at} #{@selected_timeframe.ends_at} #{@selected_timeframe.n_number}"
    respond_to do |format|
      format.html
      format.json
      # format.xls
      format.xls {  headers["Content-Disposition"] = "attachment; filename=\"reporte_semana_#{@current_timeframe.n_number}_#{@work_calendar.country.name}\.xls"  }
      format.pdf do

          render :pdf => "company_report_#{@current_timeframe.starts_at.to_date}",
                 :layout => 'pdf',
                 :orientation => 'Landscape',
                 :margin => {:top                => 5,                     # default 10 (mm)
                             :bottom             => 5,
                             :left               => 20,
                             :right              => 20},
                 :page_size => 'letter',
                 :footer => {
                     #:center => "#{current_admin.email}",
                     #:left => "Generated by #{current_admin.firstname} #{current_admin.lastname}",
                     :right => "#{Date.today.to_date}"
                 }
      end
    end
  end

  def show
    @menu_scope="reports"
    @settings_scope="dot_reports"

    @dots=WorkTimeframe.new(params.permit![:date])
    
    @work_calendar=WorkCalendar.includes(:work_timeframes).where(" work_calendars.company_id=? and  work_calendars.year=? and work_calendars.country_id=?",current_admin.company_id,@current_year,current_admin.country_id).first
    @current_timeframe=@work_calendar.work_timeframes.active.where("n_number=?",@current_week).first

    if !@dots.starts_at.nil?
      @selected_timeframe=@work_calendar.work_timeframes.active.where("n_number=?",@dots.starts_at.to_date.at_end_of_week.strftime("%U").to_i).first
    else
      @selected_timeframe=@current_timeframe
    end

    #Category.find 1, :include => {:posts => [{:comments => :guest}, :tags]}

    #@countries=CompaniesCountry.includes(:countries_dots=>[:dot], :country=>[:talent_hunters=>[:talent_hunters_dots=>[:dots_scoreds=>:work_timeframe]]] ).where("companies_countries.company_id=? and work_timeframes.n_number=?",current_admin.company_id,@current_timeframe.n_number)
    if current_admin.is_company_admin                                                                                                                       #work_timeframes.n_number=?",@selected_timeframe.n_number
      @countries=CompaniesCountry.includes(:countries_dots=>[:dot], :country=>[:talent_hunters=>[:talent_hunters_dots=>[:dots_scoreds=>:work_timeframe]]] ).where("companies_countries.company_id=? and work_timeframes.n_number=?",current_admin.company_id,@selected_timeframe.n_number)
    elsif current_admin.is_country_admin
      @countries=CompaniesCountry.includes(:countries_dots=>[:dot], :country=>[:talent_hunters=>[:talent_hunters_dots=>[:dots_scoreds=>:work_timeframe]]] ).where("companies_countries.company_id=? and companies_countries.country_id=? and work_timeframes.n_number=?",current_admin.company_id,current_admin.country_id,@selected_timeframe.n_number)
    end
    #render :inline=>"#{@selected_timeframe.starts_at} #{@selected_timeframe.ends_at} #{@selected_timeframe.n_number}"
    respond_to do |format|
      format.html #show.html.erb
      format.json
      format.xls
      format.pdf do
          @example_text = "some text"
          render :pdf => "company_report_#{@current_timeframe.starts_at.to_date}",
                 :layout => 'pdf',
                 :orientation => 'Landscape',
                 :margin => {:top                => 5,                     # default 10 (mm)
                             :bottom             => 8,
                             :left               => 20,
                             :right              => 20},
                 :page_size => 'letter'
                 # :footer => {
                 #    :center => "Searchin Company",
                 #    :left => "Generated by #{current_admin.firstname} #{current_admin.lastname}",
                 #    :right => "#{Date.today.to_date}"
                 # }
      end
    end
  end

  def track
    @menu_scope="reports"
    @settings_scope="dot_reports"

    @selected_country ||=  (params[:country_id] || current_admin.country_id)

    #Estableciendo el pais del modulo
    if params[:report]
      if params[:report][:country_id]
        @country = CompaniesCountry.includes(:countries_dots=>[:dot], :country=>[:talent_hunters]).where("companies_countries.company_id=? and companies_countries.country_id=?",current_admin.company_id,params[:report][:country_id]).first 
      else
        @country = CompaniesCountry.includes(:countries_dots=>[:dot], :country=>[:talent_hunters]).where("companies_countries.company_id=? and companies_countries.country_id=?",current_admin.company_id,current_admin.country_id).first
      end
      if params[:report][:month]
        @current_month= params[:report][:month].to_i
      else
        @current_month= Date.today.month.to_i
      end
    else
      @country = CompaniesCountry.includes(:countries_dots=>[:dot], :country=>[:talent_hunters]).where("companies_countries.company_id=? and companies_countries.country_id=?",current_admin.company_id,current_admin.country_id).first
      @current_month= Date.today.month.to_i
    end

    # @first_week_of_month=(Date.today-Date.today.strftime("%d").to_i+1.day)

    @work_calendar=WorkCalendar.includes(:work_timeframes).where(" work_calendars.company_id=? and  work_calendars.year=? and work_calendars.country_id=?",current_admin.company_id,@current_year,@country.country.id).first
    @current_timeframes=@work_calendar.work_timeframes.active.where("month = ?",@current_month).order("n_number ASC")

    if current_admin.is_company_admin
      @countries=CompaniesCountry.includes(:country).where("companies_countries.company_id=?",current_admin.company_id)
    elsif current_admin.is_country_admin
      @countries=CompaniesCountry.includes(:country).where("companies_countries.company_id=? and companies_countries.country_id=?",current_admin.company_id,current_admin.country_id)
    end
    
    respond_to do |format|
      format.html
      # format.xls "reporte_mensual_#{MONTHS[@current_month][0]}"
      format.xls {  headers["Content-Disposition"] = "attachment; filename=\"reporte_mensual_#{MONTHS[@current_month][0]}_#{@work_calendar.country.name}\.xls"  }
      #format.pdf do
      #    render :pdf => "reporte_mensual_#{MONTHS[@current_month][0]}",
      #           :layout => 'pdf',
      #           :orientation => 'Landscape',
      #           :margin => {:top                => 5,                     # default 10 (mm)
      #                       :bottom             => 5,
      #                       :left               => 20,
      #                       :right              => 20},
      #           :page_size => 'letter',
      #           :footer => {
      #               #:center => "#{current_admin.email}",
      #               #:left => "Generated by #{current_admin.firstname} #{current_admin.lastname}",
      #               :right => "#{Date.today.to_date}"
      #           }
      #end
    end
  end  

  def quarter
    @menu_scope="reports"
    @settings_scope="dot_reports"

    #Estableciendo el pais del modulo
    if params[:report]
      if params[:report][:country_id]
        @country = CompaniesCountry.includes(:countries_dots=>[:dot], :country=>[:talent_hunters]).where("companies_countries.company_id=? and companies_countries.country_id=?",current_admin.company_id, params[:report][:country_id]).first 
      else
        @country = CompaniesCountry.includes(:countries_dots=>[:dot], :country=>[:talent_hunters]).where("companies_countries.company_id=? and companies_countries.country_id=?",current_admin.company_id,current_admin.country_id).first
      end
    else
      @country = CompaniesCountry.includes(:countries_dots=>[:dot], :country=>[:talent_hunters]).where("companies_countries.company_id=? and companies_countries.country_id=?",current_admin.company_id,current_admin.country_id).first
    end

    # @first_week_of_month=(Date.today-Date.today.strftime("%d").to_i+1.day)

    @work_calendar=WorkCalendar.includes(:work_timeframes).where(" work_calendars.company_id=? and  work_calendars.year=? and work_calendars.country_id=?",current_admin.company_id,@current_year,@country.country.id).first
    @current_timeframes=@work_calendar.work_timeframes.active.order("n_number ASC")

    if current_admin.is_company_admin
      @countries=CompaniesCountry.includes(:country).where("companies_countries.company_id=?",current_admin.company_id)
    elsif current_admin.is_country_admin
      @countries=CompaniesCountry.includes(:country).where("companies_countries.company_id=? and companies_countries.country_id=?",current_admin.company_id,current_admin.country_id)
    end
    
    respond_to do |format|
      format.html
      format.xls
    end
  end

  def hunter
    generate_missing_entries_for_countries
    #render :inline=>"true"
  end

  def quarter_hunter
    @menu_scope="reports"
    @settings_scope="dot_reports"

    #Estableciendo el pais del modulo
    if params[:report]
      if params[:report][:country_id]
        @country = CompaniesCountry.includes(:countries_dots=>[:dot], :country=>[:talent_hunters]).where("companies_countries.company_id=? and companies_countries.country_id=?",current_admin.company_id,params[:report][:country_id]).first 
      else
        @country = CompaniesCountry.includes(:countries_dots=>[:dot], :country=>[:talent_hunters]).where("companies_countries.company_id=? and companies_countries.country_id=?",current_admin.company_id,current_admin.country_id).first
      end
    else
      @country = CompaniesCountry.includes(:countries_dots=>[:dot], :country=>[:talent_hunters]).where("companies_countries.company_id=? and companies_countries.country_id=?",current_admin.company_id,current_admin.country_id).first
    end

    # @first_week_of_month=(Date.today-Date.today.strftime("%d").to_i+1.day)

    @work_calendar=WorkCalendar.includes(:work_timeframes).where(" work_calendars.company_id=? and  work_calendars.year=? and work_calendars.country_id=?",current_admin.company_id,@current_year,@country.country.id).first
    @current_timeframes=@work_calendar.work_timeframes.active.order("n_number ASC")

    if current_admin.is_company_admin
      @countries=CompaniesCountry.includes(:country).where("companies_countries.company_id=?",current_admin.company_id)
    elsif current_admin.is_country_admin
      @countries=CompaniesCountry.includes(:country).where("companies_countries.company_id=? and companies_countries.country_id=?",current_admin.company_id,current_admin.country_id)
    end
    
    respond_to do |format|
      format.html
      format.xls
      # format.pdf do
      #     render :pdf => "reporte_mensual_#{MONTHS[@current_month][0]}",
      #            :layout => 'pdf',
      #            :orientation => 'Landscape',
      #            :margin => {:top                => 5,                     # default 10 (mm)
      #                        :bottom             => 5,
      #                        :left               => 20,
      #                        :right              => 20},
      #            :page_size => 'letter',
      #            :footer => {
      #                #:center => "#{current_admin.email}",
      #                #:left => "Generated by #{current_admin.firstname} #{current_admin.lastname}",
      #                :right => "#{Date.today.to_date}"
      #            }
      # end
    end
  end

  def consolidated
    @menu_scope="reports"
    @settings_scope="dot_reports"

    #Estableciendo el pais del modulo
    if params[:report]
      if params[:report][:country_id]
        @country = CompaniesCountry.includes(:countries_dots=>[:dot], :country=>[:talent_hunters]).where("companies_countries.company_id=? and companies_countries.country_id=?",current_admin.company_id,params[:report][:country_id]).first 
      else
        @country = CompaniesCountry.includes(:countries_dots=>[:dot], :country=>[:talent_hunters]).where("companies_countries.company_id=? and companies_countries.country_id=?",current_admin.company_id,current_admin.country_id).first
      end
    else
      @country = CompaniesCountry.includes(:countries_dots=>[:dot], :country=>[:talent_hunters]).where("companies_countries.company_id=? and companies_countries.country_id=?",current_admin.company_id,current_admin.country_id).first
    end

    # @first_week_of_month=(Date.today-Date.today.strftime("%d").to_i+1.day)

    @work_calendar=WorkCalendar.includes(:work_timeframes).where(" work_calendars.company_id=? and  work_calendars.year=? and work_calendars.country_id=?",current_admin.company_id,@current_year,@country.country.id).first
    @current_timeframes=@work_calendar.work_timeframes.active.order("n_number ASC")

    @current_timeframe=@current_timeframes.where("n_number=?",@current_week).first

    if current_admin.is_company_admin
      @countries=CompaniesCountry.includes(:country).where("companies_countries.company_id=?",current_admin.company_id)
    elsif current_admin.is_country_admin
      @countries=CompaniesCountry.includes(:country).where("companies_countries.company_id=? and companies_countries.country_id=?",current_admin.company_id,current_admin.country_id)
    end
    
    respond_to do |format|
      format.html
      format.xls
      # format.pdf do
      #     render :pdf => "reporte_mensual_#{MONTHS[@current_month][0]}",
      #            :layout => 'pdf',
      #            :orientation => 'Landscape',
      #            :margin => {:top                => 5,                     # default 10 (mm)
      #                        :bottom             => 5,
      #                        :left               => 20,
      #                        :right              => 20},
      #            :page_size => 'letter',
      #            :footer => {
      #                #:center => "#{current_admin.email}",
      #                #:left => "Generated by #{current_admin.firstname} #{current_admin.lastname}",
      #                :right => "#{Date.today.to_date}"
      #            }
      # end
    end
  end


  private
  def generate_missing_entries_for_countries
    if current_admin.is_company_admin
      countries=CompaniesCountry.includes(:country, :countries_dots).where("companies_countries.company_id=?",current_admin.company_id)
    elsif current_admin.is_country_admin
      countries=CompaniesCountry.includes(:country, :countries_dots).where("companies_countries.company_id=? and companies_countries.country_id=?",current_admin.company_id,current_admin.country_id)
    end
    logger.debug "Countries to process: #{countries.count}"

    #current_timeframe=work_calendar.work_timeframes.active.where("n_number=?",@current_week).first
    countries.each do |ccountry|
      logger.debug "Processin country #{ccountry.country.name}"           
      work_calendar=WorkCalendar.includes(:work_timeframes).where(" work_calendars.company_id=? and  work_calendars.year=? and work_calendars.country_id=?",current_admin.company_id,@current_year,ccountry.country_id).first
      #logger.
      current_timeframe=work_calendar.work_timeframes.active.where("n_number=?",@current_week).first

      dots=ccountry.countries_dots.active
      logger.debug "Dots to process: #{dots.count}"
      work_calendar.work_timeframes.active.where("work_timeframes.n_number <= #{current_timeframe.n_number}").order('created_at ASC').each do |timeframe|
        
       dots.each do |dot|
          
          report = CountryDotReport.where("dot_id=? AND country_id=? and work_timeframe_id=?",dot.dot_id,ccountry.country_id,timeframe.id).first
          logger.debug "No se encontro" if report.nil?
  
            #print "#{stop_date.to_time} < #{report.ends_at.to_time} ? #{(stop_date.to_time < report.ends_at.to_time)}\n" 
            
          if report.nil? 
            logger.debug "entro al if"
            #break
            report = CountryDotReport.new
            report.dot_id = dot.dot_id
            report.country_id = ccountry.country_id
            report.work_timeframe_id = timeframe.id

            #---get the current counts for this week's activity
            #report.get_totals(ccountry.country_id, dot.dot_id, timeframe.id)
            report.get_totals
            report.save
          end

        end
        logger.debug "Current Timeframe is : #{current_timeframe.n_number} vs loop timeframe is #{timeframe.n_number}"
      end
    end  
  end
end
